apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.fernandocejas.sample.app"
        minSdkVersion 26
        targetSdkVersion 29
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    //-----------------------------------------------------------
    // BUILD VARIANTS: For Feature Flags
    // https://developer.android.com/studio/build/build-variants
    //-----------------------------------------------------------
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        staging {
            initWith debug
            applicationIdSuffix ".debugStaging"
        }
    }

    flavorDimensions "version"
    productFlavors {
        demo {
            dimension "version"
            applicationIdSuffix ".demo"
            versionNameSuffix "-demo"
        }
        full {
            dimension "version"
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
        }
    }
    //------------------------------------------------------------
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    testImplementation 'junit:junit:4.12'
    testImplementation 'io.mockk:mockk:1.9'
    testImplementation 'org.amshove.kluent:kluent-android:1.60'
}

task printVariantsName(){
    doLast {
        android.applicationVariants.all { variant ->
            def buildType = "Build Type: ${buildType.name}"
            def productFlavour = "Product Flavour: ${variant.flavorName}"
            println "BUILD VARIANT -> ${buildType} - ${productFlavour}"
        }
    }
}

task runUnitTests(dependsOn: [':app:testFullDebugUnitTest']) {
    description 'Run all unit tests'
}

class RunOnDeviceTask extends DefaultTask {
    @Input String productFlavor = 'demo'
    @Input String buildType = 'debug'

    @TaskAction def run() {
        project.exec {
            def rootDir = project.rootDir
            def localProperties = new File(rootDir, "local.properties")
            if (localProperties.exists()) {
                Properties properties = new Properties()
                localProperties.withInputStream {
                    inputStream -> properties.load(inputStream)
                }
                def sdkDir = properties.getProperty('sdk.dir')
                def adb = "$sdkDir/platform-tools/adb"
                def packageName = "com.fernandocejas.sample.app.${productFlavor}.${buildType}"
                def mainActivity = "com.fernandocejas.sample.app.MainActivity"
                commandLine "$adb", 'shell', 'am', 'start', '-n', "${packageName}/${mainActivity}"
            }
        }
    }
}

afterEvaluate {
    android.applicationVariants.all { variant ->
        def type = buildType.name
        def flavour = variant.flavorName

        tasks.register("run${flavour.capitalize()}${type.capitalize()}", RunOnDeviceTask) {
            dependsOn "install${flavour.capitalize()}${type.capitalize()}"
            productFlavor = flavour
            buildType = type
        }
    }
}